# Day 03

```elixir
Mix.install([:kino_aoc])

Kino.configure(inspect: [charlists: :as_lists])
```

## Input

<!-- livebook:{"attrs":"eyJhc3NpZ25fdG8iOiJwdXp6bGVfaW5wdXQiLCJkYXkiOiIzIiwic2Vzc2lvbl9zZWNyZXQiOiJBRFZFTlRfT0ZfQ09ERV9TRVNTSU9OIiwieWVhciI6IjIwMjQifQ","chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2024", "3", System.fetch_env!("LB_ADVENT_OF_CODE_SESSION"))
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 1

```elixir
# Regex version
Regex.scan(~r/mul\((\d+),(\d+)\)/, puzzle_input)
|> Enum.reduce(0, fn [_capture, l, r], acc -> 
    acc + String.to_integer(l) * String.to_integer(r)
  end)
```

```elixir
# Pattern matching version
defmodule Part1 do
  def parse("", _state, parsed), do: parsed
  def parse("mul(" <> rest, _state, parsed), do: parse(rest, :left_arg, [{"", ""} | parsed])
  def parse(")" <> rest, :right_arg, parsed), do: parse(rest, :nil, parsed)
  def parse("," <> rest, :left_arg, parsed), do: parse(rest, :right_arg, parsed)
  def parse(<<x, rest::binary>>, state, [{l, r} | tail] = parsed) when x in ?0..?9 do
    case state do
      :left_arg -> parse(rest, :left_arg, [{l <> <<x>>, r} | tail])
      :right_arg -> parse(rest, :right_arg, [{l, r <> <<x>>} | tail])
      _ -> parse(rest, state, parsed)
    end
  end
  def parse(<<_x, rest::binary>>, :left_arg, [_head | tail]), do: parse(rest, nil, tail)
  def parse(<<_x, rest::binary>>, :right_arg, [_head | tail]), do: parse(rest, nil, tail)
  def parse(<<_x, rest::binary>>, state, parsed), do: parse(rest, state, parsed)
end

Part1.parse(puzzle_input, nil, [])
|> Enum.reduce(0, fn {l, r}, acc -> acc + String.to_integer(l) * String.to_integer(r) end)
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 2

```elixir
Regex.scan(~r/mul\((\d+),(\d+)\)|do\(\)|don't\(\)/, puzzle_input)
|> Enum.reduce({true, 0}, fn 
  ["do()"], {_status, acc} -> {true, acc}
  ["don't()"], {_status, acc} -> {false, acc}
  [_capture, l, r], {true, acc} -> {true, acc + String.to_integer(l) * String.to_integer(r)}
  _, {false, acc} -> {false, acc}
  end)
|> elem(1)
```

<!-- livebook:{"offset":2154,"stamp":{"token":"XCP.GnldOB5zUX8HSfJIGUDvXMFCABr60yxKMf5IBZ6_uBLWan2hsC8R7Pb3_eHssWvnVS_9vBzo1n8UffyYjkHgxQ7rq0Y4yPewtZSWbPbokr5FF7yIKA3SNwWQhoANeTNEUFY","version":2}} -->
