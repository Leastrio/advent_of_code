# Day 03

```elixir
Mix.install([:kino_aoc])

Kino.configure(inspect: [charlists: :as_lists])
```

## Input

<!-- livebook:{"attrs":"eyJhc3NpZ25fdG8iOiJwdXp6bGVfaW5wdXQiLCJkYXkiOiIzIiwic2Vzc2lvbl9zZWNyZXQiOiJBRFZFTlRfT0ZfQ09ERV9TRVNTSU9OIiwieWVhciI6IjIwMjQifQ","chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2024", "3", System.fetch_env!("LB_ADVENT_OF_CODE_SESSION"))
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 1

```elixir
Regex.scan(~r/mul\((\d+),(\d+)\)/, puzzle_input)
|> Enum.reduce(0, fn [_capture, l, r], acc -> 
    acc + String.to_integer(l) * String.to_integer(r)
  end)
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 2

```elixir
Regex.scan(~r/mul\((\d+),(\d+)\)|do\(\)|don't\(\)/, puzzle_input)
|> Enum.reduce({true, 0}, fn 
  ["do()"], {_status, acc} -> {true, acc}
  ["don't()"], {_status, acc} -> {false, acc}
  [_capture, l, r], {true, acc} -> {true, acc + String.to_integer(l) * String.to_integer(r)}
  _, {false, acc} -> {false, acc}
  end)
|> elem(1)
```

<!-- livebook:{"offset":1098,"stamp":{"token":"XCP.aGNOld7xTiGartwx4XNwRxquny6_W9_1hRVsGluJdFDFytUz21G8OYw5lAIhmHyC9AxT6f8AQhuSDhWozXvYaa2HqvDc1XSnXPZvNtwC_SFKTqoZxJ-2W0qM07naoxhTVZw","version":2}} -->
