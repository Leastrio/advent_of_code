# Day 05

```elixir
Mix.install([:kino_aoc])

Kino.configure(inspect: [charlists: :as_lists])
```

## Input

<!-- livebook:{"attrs":"eyJhc3NpZ25fdG8iOiJwdXp6bGVfaW5wdXQiLCJkYXkiOiI1Iiwic2Vzc2lvbl9zZWNyZXQiOiJBRFZFTlRfT0ZfQ09ERV9TRVNTSU9OIiwieWVhciI6IjIwMjQifQ","chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2024", "5", System.fetch_env!("LB_ADVENT_OF_CODE_SESSION"))
```

```elixir
[rules, updates] = String.split(puzzle_input, "\n\n") |> Enum.map(&String.split(&1, "\n"))

rules = Enum.map(rules, &String.split(&1, "|")) |> Enum.group_by(&Enum.at(&1, 1), &Enum.at(&1, 0))
updates = Enum.map(updates, &String.split(&1, ","))
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 1

```elixir
Enum.filter(updates, fn line -> 
  Enum.all?(Stream.with_index(line), fn {num, index} -> 
    not Enum.any?(Enum.slice(line, index+1..-1//1), fn x -> 
      Enum.member?(rules[num] || [], x)
    end)
  end)
end)
|> Enum.reduce(0, fn line, acc -> 
  acc + String.to_integer(Enum.at(line, div(length(line), 2))) 
end)
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 2

```elixir
Enum.filter(updates, fn line -> 
  Enum.any?(Stream.with_index(line), fn {num, index} -> 
    Enum.any?(Enum.slice(line, index+1..-1//1), fn x -> 
      Enum.member?(rules[num] || [], x)
    end)
  end)
end)
|> Enum.map(fn line -> Enum.sort(line, fn x, y -> 
    Enum.member?(rules[y] || [], x) or x == y
  end)
end)
|> Enum.reduce(0, fn line, acc -> 
  acc + String.to_integer(Enum.at(line, div(length(line), 2))) 
end)
```

<!-- livebook:{"offset":1839,"stamp":{"token":"XCP.vHwe6NO4DnGaN1IeGkNJozHOWQPURIiGGts0PZ7Ahvasu8OaejeBJPl27rNsVCAn0XzDOsM-vpGCt8V7SK1_rxNJk7Ph_QtI2GhNmpEJGHuiS5ld_nA-NJ4v31TmJ6V5uww","version":2}} -->
