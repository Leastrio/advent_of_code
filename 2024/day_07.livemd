# Day 07

```elixir
Mix.install([:kino_aoc])

Kino.configure(inspect: [charlists: :as_lists])
```

## Input

<!-- livebook:{"attrs":"eyJhc3NpZ25fdG8iOiJwdXp6bGVfaW5wdXQiLCJkYXkiOiI3Iiwic2Vzc2lvbl9zZWNyZXQiOiJBRFZFTlRfT0ZfQ09ERV9TRVNTSU9OIiwieWVhciI6IjIwMjQifQ","chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2024", "7", System.fetch_env!("LB_ADVENT_OF_CODE_SESSION"))
```

```elixir
parsed =
  puzzle_input
  |> String.split("\n")
  |> Enum.map(fn x -> 
    [total, nums] = String.split(x, ":")
    nums = String.split(nums, " ", trim: true) |> Enum.map(&String.to_integer/1)
    {String.to_integer(total), nums}
  end)
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 1

```elixir
defmodule Part1 do
  def create_op_combos(len) do 
    Enum.reduce(1..(len - 1), [[]], fn _, acc -> 
      for combination <- acc, operator <- ["+", "*"] do
        combination ++ [operator]
      end  
    end)
  end
end

Enum.filter(parsed, fn {total, [head | tail] = ints} -> 
  combos = ints
  |> length()
  |> Part1.create_op_combos()

  Enum.any?(combos, fn combo -> 
    total === elem(Enum.reduce(tail, {head, combo}, fn num, {total, [op | rest]} -> 
      case op do
        "+" -> {total + num, rest}
        "*" -> {total * num, rest}
      end  
    end), 0)
  end)
end)
|> Enum.map(&elem(&1, 0))
|> Enum.sum()
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 2

```elixir
defmodule Part2 do
  def create_op_combos(len) do 
    Enum.reduce(1..(len - 1), [[]], fn _, acc -> 
      for combination <- acc, operator <- ["+", "*", "||"] do
        combination ++ [operator]
      end  
    end)
  end
end

Task.async_stream(parsed, fn {total, [head | tail] = ints} -> 
  combos = ints
  |> length()
  |> Part2.create_op_combos()

  if Enum.any?(combos, fn combo -> 
    total === elem(Enum.reduce(tail, {head, combo}, fn num, {total, [op | rest]} -> 
      case op do
        "+" -> {total + num, rest}
        "*" -> {total * num, rest}
        "||" -> {String.to_integer("#{total}#{num}"), rest}
      end  
    end), 0)
  end), do: total, else: 0
end, ordered: false, timeout: :infinity)
|> Enum.map(&elem(&1, 1))
|> Enum.sum()
```

<!-- livebook:{"offset":2374,"stamp":{"token":"XCP.UkW73oMcWQCmRCvjgtrhkzmCJcGpUO51w-iyv5kI5MQmhacrwxhYA9LnAb2ik1PYooO_Wc7chmkI59VQlv4saG2jkzGjiEmLuvjYJEG0ArhCigtrQLlgKHM0Uo1awkk5wqc","version":2}} -->
