# Day 01

```elixir
Mix.install([:kino_aoc])

Kino.configure(inspect: [charlists: :as_lists])
```

## Input

<!-- livebook:{"attrs":"eyJhc3NpZ25fdG8iOiJwdXp6bGVfaW5wdXQiLCJkYXkiOiIxIiwic2Vzc2lvbl9zZWNyZXQiOiJBRFZFTlRfT0ZfQ09ERV9TRVNTSU9OIiwieWVhciI6IjIwMjQifQ","chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2024", "1", System.fetch_env!("LB_ADVENT_OF_CODE_SESSION"))
```

```elixir
parsed = 
  puzzle_input
    |> String.trim()
    |> String.split("\n")
    |> Enum.reduce([[], []], fn pair, [lg, rg] -> 
      [l, r] = String.split(pair, " ", trim: true)
      [[String.to_integer(l) | lg], [String.to_integer(r) | rg]]
    end)
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 1

```elixir
parsed
  |> Enum.map(&Enum.sort/1)
  |> Enum.zip_reduce(0, fn [f, s], acc -> :erlang.abs(f - s) + acc end)
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 2

```elixir
[l, r] = parsed
freqs = Enum.frequencies(r)

Enum.reduce(l, 0, fn x, acc -> 
  acc + (x * (freqs[x] || 0))
end) 
```

<!-- livebook:{"offset":1095,"stamp":{"token":"XCP.AFoNpZk0IJBpEKns__2pxR5_RJbxTFiLT-pGWhYVXvTqk0TooK11R6fBDZikepBoPj7b05_DR_oZSdntHOC1mzabJ9Mekd2zQaIcDuGKsln75mCy9bTYZYpJkWzXJm3LSyc","version":2}} -->
